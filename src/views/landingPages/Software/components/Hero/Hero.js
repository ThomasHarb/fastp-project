import React from "react";
import Box from "@mui/material/Box";
import { useTheme } from "@mui/material/styles";
import { Typography } from "@mui/material";
import AppBar from "@mui/material/AppBar";
import Tabs from "@mui/material/Tabs";
import Tab from "@mui/material/Tab";
import PropTypes from "prop-types";
import Table from "../Table/Table";
import Chart from "../Chart/Chart";
import jsonData from "../../../../../data/fastp.json";
import { BarChart } from "@mui/x-charts/BarChart";
import CharContent from "../ChartContent/CharContent";
import Heatmap from "../Heatmap/Heatmap";

function CustomTabPanel(props) {
  const { children, value, index, ...other } = props;

  return (
    <div
      role="tabpanel"
      hidden={value !== index}
      id={`simple-tabpanel-${index}`}
      aria-labelledby={`simple-tab-${index}`}
      {...other}
    >
      {value === index && (
        <Box sx={{ p: 3 }}>
          <Typography>{children}</Typography>
        </Box>
      )}
    </div>
  );
}

CustomTabPanel.propTypes = {
  children: PropTypes.node,
  index: PropTypes.number.isRequired,
  value: PropTypes.number.isRequired,
};

function a11yProps(index) {
  return {
    id: `simple-tab-${index}`,
    "aria-controls": `simple-tabpanel-${index}`,
  };
}

function Hero() {
  const theme = useTheme();
  const [value, setValue] = React.useState(0);
  const handleChange = (event, newValue) => {
    setValue(newValue);
  };
  const summaryData = jsonData.summary;
  const adapterData = jsonData.adapter_cutting;
  const duplicationData = jsonData.duplication;
  const duplicationDataHistogram = duplicationData.histogram;
  const inserSizeData = jsonData.insert_size;
  const inserSizeDataHistogram = inserSizeData.histogram;
  const readUnBeforeFiltering = jsonData.read1_before_filtering;
  const readUnBeforeFilteringLineChart = readUnBeforeFiltering.quality_curves;
  const QualityreadUnBeforeFilteringLineChart =
    readUnBeforeFilteringLineChart.A;
  console.log(jsonData.read1_after_filtering.kmer_count);

  let inserSizeDataHistogramXaxis = [];
  let index = 0;
  for (let elem of inserSizeDataHistogram) {
    inserSizeDataHistogramXaxis.push(index);
    index++;
  }
  let duplicationDataHistogramXaxis = [];
  let indexDuplication = 0;
  for (let elemDupli of duplicationDataHistogram) {
    duplicationDataHistogramXaxis.push(indexDuplication);
    indexDuplication++;
  }

  let LineChartXaxis = [];
  let indexQuality = 0;
  for (let elemQuality of QualityreadUnBeforeFilteringLineChart) {
    LineChartXaxis.push(indexQuality);
    indexQuality++;
  }
  return (
    <Box
      sx={{
        position: "relative",
        "&::after": {
          position: "absolute",
          content: '""',
          width: "30%",
          zIndex: 1,
          top: 0,
          right: 0,
          height: "100%",
          backgroundSize: "18px 18px",
          backgroundImage: `radial-gradient(${theme.palette.primary.dark} 20%, transparent 20%)`,
          opacity: 0.2,
        },
      }}
    >
      <Box position="relative" zIndex={2}>
        <Box marginBottom={2}>
          <Typography
            variant="h2"
            align={"center"}
            sx={{
              fontWeight: 700,
            }}
          >
            FastP Dashboard
          </Typography>
        </Box>
        <Box marginBottom={4}>
          <Typography variant="h6" align={"center"} color={"textSecondary"}>
            When analyzing NGS (New Generation Sequencing) data, one of the
            first step is to check the quality of the data with FastP tool.
            <br />
            FastPis a powerful tool but the output (Json file) can be difficult
            to read for users without experience in bioinformatics field. This
            dashboard provides an easy way to visualize and analyze the output
            files generated by FastP (JSON).
            <br />
            This project was a good practice on ReactJS library, Material UI and
            Data visualization in JavaScript. You can upload your JSON file here
            or use our demo dataset below.
          </Typography>
        </Box>
        <Box
          sx={{
            width: "100%",
          }}
        >
          <AppBar position="flex" style={{ position: "flex" }}>
            <Tabs
              value={value}
              onChange={handleChange}
              centered
              color="primary"
            >
              <Tab label="Overview" {...a11yProps(0)} />
              <Tab label="Adapters" {...a11yProps(1)} />
              <Tab label="Duplication" {...a11yProps(2)} />
              <Tab label="Insert size estimation" {...a11yProps(3)} />
              <Tab label="Before filtering" {...a11yProps(4)} />
              <Tab label="After filtering" {...a11yProps(5)} />
            </Tabs>
          </AppBar>
          <CustomTabPanel value={value} index={0}>
            <Table
              title="Before Filtering"
              section="before_filtering"
              summaryData={summaryData.before_filtering}
              headersKey=""
              headersValue=""
            />
            <Table
              title="After Filtering"
              section="after_filtering"
              summaryData={summaryData.after_filtering}
              headersKey=""
              headersValue=""
            />
            <Table
              title="Filtering Results"
              section="after_filtering"
              summaryData={jsonData.filtering_result}
              headersKey=""
              headersValue=""
            />
          </CustomTabPanel>
          <CustomTabPanel value={value} index={1}>
            <Table
              title="Adapter or bad ligation of read1"
              section="adapter_read1"
              summaryData={adapterData.read1_adapter_counts}
              headersKey="Sequence"
              headersValue="Occurrences"
            />
            <Table
              title="Adapter or bad ligation of read2"
              section="adapter_read2"
              summaryData={adapterData.read2_adapter_counts}
              headersKey="Sequence"
              headersValue="Occurrences"
            />
          </CustomTabPanel>
          <CustomTabPanel value={value} index={2}>
            <Box
              sx={{
                position: "relative",
                "&::after": {
                  position: "absolute",
                  content: '""',
                  width: "30%",
                  zIndex: 1,
                  top: 0,
                  right: 0,
                  height: "100%",
                  backgroundSize: "18px 18px",
                  backgroundImage: `radial-gradient(${theme.palette.primary.dark} 20%, transparent 20%)`,
                  opacity: 0.2,
                },
              }}
            >
              <Box sx={{ p: 2, textAlign: "center" }}>
                <h2>Duplication</h2>
              </Box>
              <BarChart
                series={[{ data: duplicationDataHistogram }]}
                height={390}
                xAxis={[
                  { data: duplicationDataHistogramXaxis, scaleType: "band" },
                ]}
                /* margin={{ top: 10, bottom: 30, left: 40, right: 10 }} */
              />
            </Box>
          </CustomTabPanel>
          <CustomTabPanel value={value} index={3}>
            <Box
              sx={{
                position: "relative",
                "&::after": {
                  position: "absolute",
                  content: '""',
                  width: "30%",
                  zIndex: 1,
                  top: 0,
                  right: 0,
                  height: "100%",
                  backgroundSize: "18px 18px",
                  backgroundImage: `radial-gradient(${theme.palette.primary.dark} 20%, transparent 20%)`,
                  opacity: 0.2,
                },
              }}
            >
              <Box sx={{ p: 2, textAlign: "center" }}>
                <h2>Insert size distribution</h2>
              </Box>
              <BarChart
                series={[{ data: inserSizeDataHistogram }]}
                height={390}
                xAxis={[
                  { data: inserSizeDataHistogramXaxis, scaleType: "band" },
                ]}
                /* margin={{ top: 10, bottom: 30, left: 40, right: 10 }} */
              />
            </Box>
          </CustomTabPanel>
          <CustomTabPanel value={value} index={4}>
            <Box
              sx={{
                position: "relative",
                "&::after": {
                  position: "absolute",
                  content: '""',
                  width: "30%",
                  zIndex: 1,
                  top: 0,
                  right: 0,
                  height: "100%",
                  backgroundSize: "18px 18px",
                  backgroundImage: `radial-gradient(${theme.palette.primary.dark} 20%, transparent 20%)`,
                  opacity: 0.2,
                },
              }}
            >
              <Box sx={{ p: 2, textAlign: "center" }}>
                <h2>Before filtering</h2>
              </Box>
              {/*               <LineChart
                xAxis={[{ data: LineChartXaxis }]}
                series={[
                  {
                    data: QualityreadUnBeforeFilteringLineChart,
                  },
                ]}
                width={500}
                height={300}
                headersKey="Quality"
                headersValue="Position"
              /> */}
              <Box
                sx={{
                  display: "flex",
                  alignItems: "flex-start",
                  justifyContent: "space-around",
                }}
              >
                <h2>Read 1</h2>
                <h2>Read 2</h2>
              </Box>
              <Box
                sx={{
                  display: "flex",
                  alignItems: "flex-start",
                  justifyContent: "space-around",
                }}
              >
                <h4>Quality Curves</h4>
              </Box>
              <Box
                sx={{
                  display: "flex",
                  alignItems: "flex-start",
                  justifyContent: "space-around",
                }}
              >
                <Chart typeFiltering="ReadUnBeforeFiltering" />
                <Chart typeFiltering="ReadTwoBeforeFiltering" />
              </Box>
              <Box
                sx={{
                  display: "flex",
                  alignItems: "flex-start",
                  justifyContent: "space-around",
                }}
              >
                <h4>Base Contents</h4>
              </Box>
              <Box
                sx={{
                  display: "flex",
                  alignItems: "flex-start",
                  justifyContent: "space-around",
                }}
              >
                <CharContent typeFiltering="ReadUnBeforeFiltering" />
                <CharContent typeFiltering="ReadTwoBeforeFiltering" />
              </Box>
              <Box
                sx={{
                  display: "flex",
                  alignItems: "flex-start",
                  justifyContent: "space-around",
                }}
              >
                <h4>Kmer Counting</h4>
              </Box>
              <Box
                sx={{
                  display: "flex",
                  alignItems: "flex-start",
                  justifyContent: "space-around",
                }}
              >
                <Heatmap />
                <Heatmap />
              </Box>
            </Box>
          </CustomTabPanel>
          <CustomTabPanel value={value} index={5}>
            <Box
              sx={{
                position: "relative",
                "&::after": {
                  position: "absolute",
                  content: '""',
                  width: "30%",
                  zIndex: 1,
                  top: 0,
                  right: 0,
                  height: "100%",
                  backgroundSize: "18px 18px",
                  backgroundImage: `radial-gradient(${theme.palette.primary.dark} 20%, transparent 20%)`,
                  opacity: 0.2,
                },
              }}
            >
              <Box sx={{ p: 2, textAlign: "center" }}>
                <h2>After filtering</h2>
              </Box>
              {/*               <LineChart
                xAxis={[{ data: LineChartXaxis }]}
                series={[
                  {
                    data: QualityreadUnBeforeFilteringLineChart,
                  },
                ]}
                width={500}
                height={300}
                headersKey="Quality"
                headersValue="Position"
              /> */}
              <Box
                sx={{
                  display: "flex",
                  alignItems: "flex-start",
                  justifyContent: "space-around",
                }}
              >
                <h2>Read 1</h2>
                <h2>Read 2</h2>
              </Box>
              <Box
                sx={{
                  display: "flex",
                  alignItems: "flex-start",
                  justifyContent: "space-around",
                }}
              >
                <h4>Quality Curves</h4>
              </Box>
              <Box
                sx={{
                  display: "flex",
                  alignItems: "flex-start",
                  justifyContent: "space-around",
                }}
              >
                <Chart typeFiltering="ReadUnAfterFiltering" />
                <Chart typeFiltering="ReadTwoAfterFiltering" />
              </Box>
              <Box
                sx={{
                  display: "flex",
                  alignItems: "flex-start",
                  justifyContent: "space-around",
                }}
              >
                <h4>Base Contents</h4>
              </Box>
              <Box
                sx={{
                  display: "flex",
                  alignItems: "flex-start",
                  justifyContent: "space-around",
                }}
              >
                <CharContent typeFiltering="ReadUnAfterFiltering" />
                <CharContent typeFiltering="ReadTwoAfterFiltering" />
              </Box>
              <Box
                sx={{
                  display: "flex",
                  alignItems: "flex-start",
                  justifyContent: "space-around",
                }}
              >
                <h4>Kmer Counting</h4>
              </Box>
              <Box
                sx={{
                  display: "flex",
                  alignItems: "flex-start",
                  justifyContent: "space-around",
                }}
              >
                <Heatmap />
                <Heatmap />
              </Box>
            </Box>
          </CustomTabPanel>
        </Box>
      </Box>
    </Box>
  );
}

export default Hero;
